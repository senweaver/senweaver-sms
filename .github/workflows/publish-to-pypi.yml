name: Publish Python Package to PyPI

on:
  push:
    tags:
      - "v*.*.*"  # 仅当推送符合语义化版本标签时触发 (如 v0.1.0)

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # 必须开启 Trusted Publishing 权限

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"  # 固定 Python 版本

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Validate version consistency
        run: |
          # 从 Git 标签提取版本号 (如 v0.1.0 → 0.1.0)
          TAG_VERSION="${GITHUB_REF#refs/tags/v}"
          
          # 从 pyproject.toml 提取版本号 (需要安装 tomli)
          pip install tomli
          PY_VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml','rb'))['project']['version'])")
          
          # 验证一致性
          if [ "$TAG_VERSION" != "$PY_VERSION" ]; then
            echo "❌ Error: Git tag version ($TAG_VERSION) ≠ package version ($PY_VERSION)"
            exit 1
          fi

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.0